The library uses a lot of dynamic arrays, rewriting each is
tedious and redundant. Maybe we can implement utils/array.c? I
am honestly not a fan of making abstraction, I know it's a data
structure that's being used dozens of time in libpgn, but
working with `void *` is never a good experience.

Is returing `int` for something that couldn't be minus ok? I am
thinking too much.

Maybe create a function that takes filename, and read from there,
we could save some time. Also, it's just nicer.

1. e4 (1... e5)
Is currently possible, should not even be a valid pgn file, 1...
should be white's move.

1. e4 1... e5 (1. f5)
Same here, 1. f5 should be 1... f5. Parser should return error.
